vector<int> divisibleSet(vector<int> &arr)
{
    // Write your code here.
    int n = arr.size();
    sort(arr.begin(), arr.end());

    vector<int> dp(n, 1);
    vector<int> prev(n, -1);
    int maxi = 0;

    for (int i = 1; i < n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            if (arr[i] % arr[j] == 0 && dp[i] < dp[j] + 1)
            {
                dp[i] = dp[j] + 1;
                prev[i] = j;
            }
        }

        maxi = (dp[maxi] > dp[i])? maxi : i;
    }

    vector<int> ans(dp[maxi], 0);
    int index = dp[maxi] - 1;

    for (int i = maxi; i >= 0; i = prev[i])
    {
        ans[index--] = arr[i];
    }

    return ans;
}
