#include<bits/stdc++.h>

vector<vector<int> > dp;

int mm(int k, int n)
{
    if (k == 0 || n == 0) return 0;
    if (k == 1) return n;
    if (n == 1) return 1;

    if (dp[k][n] != -1) return dp[k][n];

    int ans = 1e9;
    int start = 1, end = n;

    while (start <= end)
    {
        int mid = (start + end) >> 1;

        int broke = mm(k - 1, mid - 1);
        int fine = mm(k, n - mid);

        int curr = 1 + max(broke, fine);
        ans = min(curr, ans);

        if (broke < fine) {
            start = mid + 1;
        }
        else
            end = mid - 1;
    }

    return dp[k][n] = ans;
}

int cutLogs(int k, int n)
{
    // Write your code here.
    dp.assign(k + 1, vector<int>(n + 1, -1));

    return mm(k, n);
}
