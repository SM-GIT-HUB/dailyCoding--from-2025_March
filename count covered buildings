class Solution {
public:
    int countCoveredBuildings(int n, vector<vector<int>>& buildings) {
        unordered_map<int, array<int, 2> > rows;
        unordered_map<int, array<int, 2> > cols;

        for (auto &b : buildings)
        {
            int x = b[0];
            int y = b[1];

            if (rows.count(x))
            {
                rows[x][0] = min(rows[x][0], y);
                rows[x][1] = max(rows[x][1], y);
            }
            else
            {
                rows[x][0] = y;
                rows[x][1] = y;
            }

            if (cols.count(y))
            {
                cols[y][0] = min(cols[y][0], x);
                cols[y][1] = max(cols[y][1], x);
            }
            else
            {
                cols[y][0] = x;
                cols[y][1] = x;
            }
        }

        int ans = 0;

        for (auto &b : buildings)
        {
            int x = b[0];
            int y = b[1];

            if (rows[x][0] < y && rows[x][1] > y && cols[y][0] < x && cols[y][1] > x) ans++;
        }

        return ans;
    }
};
