
int dp[105][26];

int memoization(int month, int m, int c, int n, vector<vector<int> >& rst, vector<vector<int> >& tpt)
{
    if (month == m) return 0;

    if (dp[month][c] != -1) return dp[month][c];

    int curr = rst[c][month] + memoization(month + 1, m, c, n, rst, tpt);

    for (int i = 0; i < n; i++)
    {
        if (i == c) continue;

        if (tpt[c][i])
        {
            int next = rst[i][month] + memoization(month + 1, m, i, n, rst, tpt);
            curr = max(next, curr);
        }
    }

    return dp[month][c] = curr;
}

int daysToEnjoy(int n, int m, vector<vector<int> >& rst, vector<vector<int> >& tpt) {
    // Write your code here
    memset(dp, -1, sizeof(dp));

    int ans = memoization(0, m, 0, n, rst, tpt);
    return ans;
}
