class Solution {
  public:
    void track(int start, int sum, int n, int k, vector<int>& temp, vector<vector<int> >& ans)
    {
        if (temp.size() == k)
        {
            if (sum == n) ans.push_back(temp);
            return;
        }
        
        if (start > 9 || sum > n) return;
        
        for (int i = start; i < 10 && sum + i <= n; i++)
        {
            temp.push_back(i);
            track(i + 1, sum + i, n, k, temp, ans);
            temp.pop_back();
        }
    }
  
    vector<vector<int> > combinationSum(int n, int k) {
        // code here
        vector<int> temp;
        vector<vector<int> > ans;
        
        track(1, 0, n, k, temp, ans);
        
        return ans;
    }
};
