#include<bits/stdc++.h>

int getLis(vector<array<int, 2> >& arr)
{
    vector<int> ans = {arr[0][1]};

    for (int i = 1; i < arr.size(); i++)
    {
        if (arr[i][1] > ans.back()) {
            ans.push_back(arr[i][1]);
        }
        else
        {
            int idx = lower_bound(ans.begin(), ans.end(), arr[i][1]) - ans.begin();

            if (idx == ans.size()) continue;
            ans[idx] = arr[i][1];
        }
    }

    return ans.size();
}

int findMaxEnvelopes(vector<int>& height, vector<int>& width, int n) {
    // Write your code here.
    vector<array<int, 2> > arr(n);
    for (int i = 0; i < n; i++) arr[i] = {height[i], width[i]};

    sort(arr.begin(), arr.end(), [](array<int, 2>& a, array<int, 2>& b) {
        return (a[0] == b[0])? (a[1] > b[1]) : (a[0] < b[0]);
    });

    int lis = getLis(arr);
    return lis;
}
