// User function Template for C++

class Solution {
  public:
    int zeroSumSubmat(vector<vector<int> >& mat) {
        // Code Here
        int ans = 0;
        int m = mat.size();
        int n = mat[0].size();
        
        for (int row = 0; row < m; row++)
        {
            vector<int> temp(n, 0);
            
            for (int x = row; x < m; x++)
            {
                for (int col = 0; col < n; col++)
                {
                    temp[col] += mat[x][col];
                }
                
                int sum = 0;
                unordered_map<int, int> mapp;

                for (int col = 0; col < n; col++)
                {
                    sum += temp[col];
                    
                    if (sum == 0) {
                        ans = max((x - row + 1) * (col + 1), ans);
                    }
                    else if (mapp.count(sum)) {
                        ans = max((x - row + 1) * (col - mapp[sum]), ans);
                    }
                    
                    if (!mapp.count(sum)) {
                        mapp[sum] = col;
                    }
                }
            }
        }
        
        return ans;
    }
};
