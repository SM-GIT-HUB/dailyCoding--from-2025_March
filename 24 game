class Solution {
public:
    void track(vector<double>& arr, int &ans)
    {
        if (ans) return;

        if (arr.size() == 1)
        {
            if (fabs(arr[0] - 24.0) < 1e-6) ans = 1;
            return;
        }

        for (int i = 0; i < arr.size(); i++)
        {
            for (int j = i + 1; j < arr.size(); j++)
            {
                vector<double> v;

                for (int idx = 0; idx < arr.size(); idx++)
                {
                    if (idx != i && idx != j) v.push_back(arr[idx]);
                }

                v.push_back(0);

                v.back() = (arr[i] + arr[j]);
                track(v, ans);

                v.back() = (arr[i] - arr[j]);
                track(v, ans);

                v.back() = (arr[j] - arr[i]);
                track(v, ans);

                v.back() = (arr[i] * arr[j]);
                track(v, ans);

                if (arr[j] != 0)
                {
                    v.back() = (arr[i] / arr[j]);
                    track(v, ans);
                }

                if (arr[i] != 0)
                {
                    v.back() = (arr[j] / arr[i]);
                    track(v, ans);
                }
            }
        }
    }

    bool judgePoint24(vector<int>& cards) {
        vector<double> arr(cards.begin(), cards.end());
        
        int ans = 0;
        track(arr, ans);

        return ans;
    }
};
