/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *next;
    Node()
    {
        this->data = 0;
        next = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->next = NULL;
    }
    Node(int data, Node* next)
    {
        this->data = data;
        this->next = next;
    }
};
*/

Node* mergeKLists(vector<Node*> &listArray) {
    // Write your code here.
    auto comp = [](Node* a, Node* b) {
        return (a->data > b->data);
    };

    priority_queue<Node*, vector<Node*>, decltype(comp)> pq(comp);

    Node* ans = new Node(-1);
    Node* temp = ans;

    for (Node* x : listArray) pq.push(x);

    while (!pq.empty())
    {
        Node* curr = pq.top();
        pq.pop();

        if (!curr) continue;

        temp->next = curr;
        temp = temp->next;

        if (curr->next) pq.push(curr->next);
    }

    return ans->next;
}
