#include<bits/stdc++.h>

int dp[5001][2];

int ninjaJump(vector<int> &arr, int n)
{
    // Write your code here.
    memset(dp, 0, sizeof(dp));

    int ans = 1;
    
    dp[n - 1][1] = 1;
    dp[n - 1][0] = 1;

    for (int i = n - 2; i >= 0; i--)
    {
        int mini = 1e9, maxi = -1e9;
        int minIdx = -1;
        int maxIdx = -1;

        for (int j = i + 1; j < n; j++)
        {
            if (arr[i] <= arr[j] && arr[j] < mini)
            {
                minIdx = j;
                mini = arr[j];
            }

            if (arr[i] >= arr[j] && arr[j] > maxi)
            {
                maxIdx = j;
                maxi = arr[j];
            }

        }

        if (minIdx != -1) {
            dp[i][1] = dp[minIdx][0];
        }

        if (maxIdx != -1) {
            dp[i][0] = dp[maxIdx][1];
        }

        ans += dp[i][1];
    }

    return ans;
}
