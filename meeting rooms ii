class Solution {
  public:
    int minMeetingRooms(vector<int> &start, vector<int> &end) {
        // code here
        int n = start.size();
        vector<array<int, 2> > meets;
        
        for (int i = 0; i < n; i++) meets.push_back({start[i], end[i]});
        
        sort(meets.begin(), meets.end());
        priority_queue<int, vector<int>, greater<int> > pq;
        
        for (int i = 0; i < n; i++)
        {
            int s = meets[i][0];
            int e = meets[i][1];
            
            if (!pq.empty() && pq.top() <= s) pq.pop();
            
            pq.push(e);
        }
        
        return pq.size();
    }
};
