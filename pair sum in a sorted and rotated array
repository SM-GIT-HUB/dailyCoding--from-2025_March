// User function Template for C++

class Solution {
  public:
    int getPoint(vector<int>& arr)
    {
        int start = 0, end = arr.size() - 1;
        
        if (arr[start] < arr[end]) return start;
        
        while (start < end)
        {
            int mid = start + ((end - start) >> 1);
            
            if (arr[mid] < arr[0]) {
                end = mid;
            }
            else if (arr[mid] > arr[end]) {
                start = mid + 1;
            }
            else
                end--;
        }
        
        return start;
    }
  
    bool pairInSortedRotated(vector<int>& arr, int target) {
        // code here
        int n = arr.size();
        int idx = getPoint(arr);
        
        int start = idx, end = (idx - 1 + n) % n;
        
        while (start != end)
        {
            int sum = arr[start] + arr[end];
            
            if (sum == target) return 1;
            else if (target > sum) start = (start + 1) % n;
            else end = (end - 1 + n) % n;
        }
        
        return 0;
    }
};
