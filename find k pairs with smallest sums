class Solution {
public:
    using ar2 = array<int, 2>;

    vector<vector<int> > kSmallestPairs(vector<int>& arr1, vector<int>& arr2, int k) {
        int m = min((int)arr1.size(), k++);
        priority_queue<ar2, vector<ar2>, greater<ar2> > pq;

        vector<vector<int> > ans;
        for (int i = 0; i < m; i++) pq.push({arr1[i] + arr2[0], 0});

        while (--k)
        {
            auto [val, y] = pq.top();
            pq.pop();

            ans.emplace_back(vector<int>{val - arr2[y], arr2[y]});
            if (y + 1 < arr2.size()) pq.push({val - arr2[y] + arr2[y + 1], y + 1});
        }

        return ans;
    }
};
