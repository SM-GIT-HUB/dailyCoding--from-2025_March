#include <bits/stdc++.h> 

int eval(vector<string>& b)
{
    for (int i = 0; i < 3; i++)
    {
        if (b[i][0] == b[i][1] && b[i][1] == b[i][2] && b[i][0] != '_') {
            return (b[i][0] == 'X')? 1 : -1;
        }

        if (b[0][i] == b[1][i] && b[1][i] == b[2][i] && b[0][i] != '_') {
            return (b[0][i] == 'X')? 1 : -1;
        }
    }

    if (b[0][0] == b[1][1] && b[1][1] == b[2][2] && b[0][0] != '_') {
        return (b[0][0] == 'X')? 1 : -1;
    }

    if (b[0][2] == b[1][1] && b[1][1] == b[2][0] && b[0][2] != '_') {
        return (b[0][2] == 'X')? 1 : -1;
    }

    return 0;
}

int movesLeft(vector<string>& b)
{
    for (auto &s : b)
    {
        for (char x : s)
        {
            if (x == '_') return 1;
        }
    }

    return 0;
}

int miniMax(vector<string>& b, int xTurn)
{
    int result = eval(b);
    if (result != 0) return result;

    if (!movesLeft(b)) return 0;

    int best = (xTurn)? -2 : 2;

    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            if (b[i][j] == '_')
            {
                b[i][j] = (xTurn)? 'X' : 'O';
                int score = miniMax(b, !xTurn);
                b[i][j] = '_';
                best = (xTurn)? max(score, best) : min(best, score);
            }
        }
    }

    return best;
}

vector<int> tictactoeWinner(vector<string> &b){
    // Write your code here.
    int ans = -2;
    int row = -1, col = -1;

    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            if (b[i][j] == '_')
            {
                b[i][j] = 'X';
                int score = miniMax(b, 0);
                b[i][j] = '_';

                if (score > ans || (score == ans && (i < row || (i == row && j < col))))
                {
                    ans = score;
                    row = i;
                    col = j;
                }
            }
        }
    }

    return {ans, row + 1, col + 1};
}
