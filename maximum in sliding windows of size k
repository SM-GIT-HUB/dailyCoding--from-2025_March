#include <bits/stdc++.h>

struct obj {
    int data;
    int index;
};

vector<int> slidingWindowMaximum(vector<int> &nums, int &k)
{
    //    Write your code here.
    deque<obj> dq;

    vector<int> ans;
    int n = nums.size();

    for (int i = 0; i < k; i++)
    {
        while (!dq.empty() && dq.back().data <= nums[i]) dq.pop_back();
        dq.push_back({nums[i], i});
    }

    ans.push_back(dq.front().data);

    for (int i = 1; i + k - 1 < n; i++)
    {
        while (!dq.empty() && dq.front().index < i) dq.pop_front();
        while (!dq.empty() && dq.back().data <= nums[i + k - 1]) dq.pop_back();
        
        dq.push_back({nums[i + k - 1], i + k - 1});
        ans.push_back(dq.front().data);
    }

    return ans;
}
