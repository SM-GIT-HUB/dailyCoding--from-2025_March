class Solution {
public:
    int minOperations(vector<vector<int>>& grid, int x) {
        vector<int> elems;
        int m = grid.size();
        int n = grid[0].size();

        int rem = grid[0][0] % x;
        
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (grid[i][j] % x != rem) {
                    return -1;
                }

                elems.push_back(grid[i][j]);
            }
        }

        sort(elems.begin(), elems.end());

        int mid = elems[(m * n - 1) / 2];
        int ans = 0;

        for (int elem : elems)
        {
            int diff = abs(elem - mid);
            ans += diff / x;
        }

        return ans;
    }
};
