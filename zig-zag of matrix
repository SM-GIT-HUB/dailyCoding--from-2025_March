
int d[2][2] = {{-1, 1}, {1, -1}};

vector<int> printMatrix(vector<vector<int> >& mat, int m, int n)
{
    // Write your code here
    vector<int> ans;

    int idx = 0;
    int x = 0, y = 0;

    while (ans.size() != m * n)
    {
        int i = x;
        int j = y;

        while (i >= 0 && j < n)
        {
            ans.push_back(mat[i][j]);
            i += d[idx][0];
            j += d[idx][1];
        }

        if (ans.size() == m * n) break;

        if (j == n)
        {
            x = i + 2;
            y = n - 1;
        }
        else if (i == -1)
        {
            x = 0;
            y = j;
        }

        i = x, j = y;
        idx = (idx + 1) % 2;

        while (i < m && j >= 0)
        {
            ans.push_back(mat[i][j]);
            i += d[idx][0];
            j += d[idx][1];
        }

        if (i == m)
        {
            x = m - 1;
            y = j + 2;
        }
        else if (j == -1)
        {
            x = i;
            y = 0;
        }

        idx = (idx + 1) % 2;
    }

    return ans;
}
