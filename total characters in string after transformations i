class Solution {
public:
    int lengthAfterTransformations(string s, int t) {
        int mod = 1e9 + 7;

        long long count[26] = {0};
        long long temp[26] = {0};

        for (char x : s)
        {
            count[x - 'a']++;
        }

        while (t--)
        {
            for (int i = 0; i < 26; i++)
            {
                if (count[i] != 0)
                {
                    if (i == 25)
                    {
                        temp[0] = (temp[0] + count[i]) % mod;
                        temp[1] = (temp[1] + count[i]) % mod;
                    }
                    else
                        temp[i + 1] = (temp[i + 1] + count[i]) % mod;
                    
                    count[i] = 0;
                }
            }

            for (int i = 0; i < 26; i++)
            {
                count[i] = temp[i];
                temp[i] = 0;
            }
        }

        long long ans = 0;

        for (int i = 0; i < 26; i++)
        {
            ans = (ans + count[i]) % mod;
        }

        return (int)ans;
    }
};
