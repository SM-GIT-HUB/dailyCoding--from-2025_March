class Solution {
  public:
    using ar2 = array<int, 2>;
  
    bool isPossible(vector<int>& arr, int k) {
        // code here
        int idx = 0;
        priority_queue<ar2, vector<ar2>, greater<ar2> > pq;
        
        while (idx < arr.size())
        {
            if (pq.empty())
            {
                pq.push({arr[idx++], 1});
                continue;
            }
            
            ar2 curr = pq.top();
            
            if (curr[0] == arr[idx]) {
                pq.push({arr[idx++], 1});
            }
            else if (curr[0] + 1 == arr[idx])
            {
                pq.pop();
                pq.push({arr[idx++], curr[1] + 1});
            }
            else
            {
                if (curr[1] < k) return 0;
                pq.pop();
            }
        }
        
        while (!pq.empty())
        {
            if (pq.top()[1] < k) return 0;
            pq.pop();
        }
        
        return 1;
    }
};
