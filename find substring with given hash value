class Solution {
public:
    string subStrHash(string s, int power, int mod, int k, int hashValue) {
        int n = s.size();
        long long p = 1;

        int idx = -1;
        long long hash = 0;
        
        for (int i = n - k; i < n; i++)
        {
            hash = (hash + p * (s[i] - 'a' + 1) % mod) % mod;
            if (i != n - 1) p = (p * power) % mod;
        }

        if (hash == hashValue) idx = n - k;

        for (int i = n - k - 1; i >= 0; i--)
        {
            hash = (hash - p * (s[i + k] - 'a' + 1) % mod + mod) % mod;
            hash = ((hash * power) % mod + (s[i] - 'a' + 1)) % mod;

            if (hash == hashValue) idx = i;
        }

        return s.substr(idx, k);
    }
};
