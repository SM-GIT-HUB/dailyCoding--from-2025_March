class Solution {
public:
    int minimumFinishTime(vector<vector<int>>& tires, int changeTime, int numLaps) {
        int n = tires.size();
        vector<int> minTimeLap(numLaps + 1, INT_MAX);

        int lap;
        long long p, totalTime, currTime;

        for (vector<int> &t : tires)
        {
            p = 1;
            lap = 0;
            totalTime = 0;

            while (lap < numLaps)
            {
                currTime = p * t[0];
                if (currTime > changeTime + t[0]) break;

                lap++;
                totalTime = totalTime + currTime;

                if (totalTime < minTimeLap[lap]) minTimeLap[lap] = totalTime;
                p = p * t[1];
            }
        }

        vector<int> dp(numLaps + 1, INT_MAX);
        dp[0] = 0;
        
        for (int i = 1; i <= numLaps; i++)
        {
            for (int j = 1; j < i; j++)
            {
                if (minTimeLap[j] == INT_MAX || dp[i - j] == INT_MAX) continue;
                dp[i] = min(dp[i], dp[i - j] + changeTime + minTimeLap[j]);
            }

            if (minTimeLap[i] < dp[i]) dp[i] = minTimeLap[i];
        }

        return dp[numLaps];
    }
};
