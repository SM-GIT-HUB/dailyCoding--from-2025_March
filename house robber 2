class Solution {
public:
    int spaceOpt(int start, int n, vector<int>& arr)
    {
        int next2 = arr[n - 1];
        int next1 = max(arr[n - 2], next2);
        int curr = max(next1, next2);

        for (int index = n - 3; index >= start; index--)
        {
            int include = arr[index] + next2;
            int exclude = next1;

            curr = max(include, exclude);

            next2 = next1;
            next1 = curr;
        }

        return curr;
    }

    int rob(vector<int>& nums) {
        int n = nums.size();

        if (n == 1) {
            return nums[0];
        }
        else if (n == 2) {
            return max(nums[0], nums[1]);
        }

        int ans = max(spaceOpt(0, n - 1, nums), spaceOpt(1, n, nums));

        return ans;
    }
};
