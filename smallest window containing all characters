class Solution {
  public:
    string smallestWindow(string &s, string &p) {
        // code here
        int mappS[26] = {0};
        int mappP[26] = {0};
        
        for (char x : p) mappP[x - 'a']++;
        
        int idx = -1;
        int len = 1e7;
        
        int pn = 0;
        int match = 0;
        
        for (int i = 0; i < 26; i++)
        {
            if (mappP[i]) pn++;
        }
        
        int start = 0;
        
        for (int end = 0; end < s.size(); end++)
        {
            if (++mappS[s[end] - 'a'] == mappP[s[end] - 'a']) match++;
            
            while (match == pn)
            {
                int currLen = end - start + 1;
                
                if (currLen < len)
                {
                    idx = start;
                    len = currLen;
                }
                
                if (mappS[s[start] - 'a']-- == mappP[s[start++] - 'a']) match--;
            }
        }
        
        if (idx == -1) return "";
        return s.substr(idx, len);
    }
};
