#include <bits/stdc++.h> 

int isValid(string &s)
{
    int balance = 0;

    for (char x : s)
    {
        if (x == '(') balance++;
        else if (x == ')')
        {
            if (balance == 0) return 0;
            balance--;
        }
    }

    return (balance == 0);
}

vector<string> minRemovaltoMakeStringValid(string &str)
{
    // Write your code here.
    unordered_set<string> visited;
    queue<string> q;
    vector<string> ans;
    int found = 0;

    q.push(str);
    visited.insert(str);

    while (!q.empty())
    {
        int size = q.size();

        while (size--)
        {
            string curr = q.front();
            q.pop();

            if (isValid(curr))
            {
                ans.push_back(curr);
                found = 1;
            }

            if (found) continue;

            for (int i = 0; i < curr.size(); i++)
            {
                if (curr[i] != '(' && curr[i] != ')') continue;
                string next = curr.substr(0, i) + curr.substr(i + 1);

                if (!visited.count(next))
                {
                    q.push(next);
                    visited.insert(next);
                }
            }
        }

        if (found) break;
    }

    return ans;
}
