#include <bits/stdc++.h> 

void getPrimes(bitset<4001>& primes)
{
    primes.set();
    primes[0] = 0;

    for (int i = 1; i < 4001; i++)
    {
        int elem = 2 * i + 1;

        if (elem > 8000) {
            break;
        }

        if (primes[i] == 1)
        {
            for (int j = i + elem; j < 4001; j += elem)
            {
                primes[j] = 0;
            }
        }
    }
}

int check(int num, bitset<4001>& primes)
{
    while (num != 0)
    {
        int bit = num % 10;
        
        if (!(bit & 1) && bit != 2) {
            return 0;
        }

        if ((bit & 1) && primes[bit / 2] == 0) {
            return 0;
        }

        num = num / 10;
    }

    return 1;
}

int countMegaPrimeNumber(int left, int right) {
    // Write your code here.
    bitset<4001> primes;
    getPrimes(primes);

    if (right < 2) {
        return 0;
    }
    
    int ans = 0;
    
    if (left <= 2)
    {
        ans++;
        left = 3;
    }

    for (int i = left; i <= right; i++)
    {
        if ((i & 1) && primes[i / 2] && check(i, primes)) {
            ans++;
        }
    }

    return ans;
}
