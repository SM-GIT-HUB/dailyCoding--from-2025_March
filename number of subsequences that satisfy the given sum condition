class Solution {
public:
    int numSubseq(vector<int>& nums, int target) {
        int mod = 1e9 + 7;

        int n = nums.size();
        sort(nums.begin(), nums.end());

        vector<long long> pow2(n + 1);
        pow2[0] = 1;

        for (int i = 1; i <= n; i++) pow2[i] = (pow2[i - 1] * 2) % mod;

        long long ans = 0;
        int start = 0, end = n - 1;

        while (start <= end)
        {
            if (nums[start] + nums[end] <= target)
            {
                ans = (ans + pow2[end - start]) % mod;
                start++;
            }
            else
                end--;
        }

        return ans;
    }
};
