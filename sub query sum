#include <bits/stdc++.h> 
vector<int> findSubmatrixSum(vector<vector<int>> &arr, vector<vector<int>> &queries) 
{
    // Write your code here
    int m = arr.size(), n = arr[0].size();

    vector<vector<int> > sum(m, vector<int>(n, 0));

    sum[0][0] = arr[0][0];

    for (int i = 1; i < m; i++)
    {
        sum[i][0] = arr[i][0] + sum[i - 1][0];
    }

    for (int j = 1; j < n; j++)
    {
        sum[0][j] = arr[0][j] + sum[0][j - 1];
    }

    for (int i = 1; i < m; i++)
    {
        for (int j = 1; j < n; j++)
        {
            sum[i][j] = arr[i][j] + sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1];
        }
    }

    vector<int> ans;

    for (auto &q : queries)
    {
        int x1 = q[0], y1 = q[1];
        int x2 = q[2], y2 = q[3];

        int curr = sum[x2][y2];
        int min1 = 0, min2 = 0, plus = 0;
        
        if (x1 - 1 >= 0) {
            min1 = sum[x1 - 1][y2];
        }

        if (y1 - 1 >= 0) {
            min2 = sum[x2][y1 - 1];
        }

        if (x1 - 1 >= 0 && y1 - 1 >= 0) {
            plus = sum[x1 - 1][y1 - 1];
        }

        curr = curr - min1 - min2 + plus;

        ans.push_back(curr);
    }

    return ans;
}
