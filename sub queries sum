#include <bits/stdc++.h> 

void getPrefixSum(int m, int n, vector<vector<int> >& sum, vector<vector<int> >& arr)
{
    sum[0][0] = arr[0][0];

    for (int i = 1; i < m; i++) sum[i][0] = arr[i][0] + sum[i - 1][0];
    for (int j = 1; j < n; j++) sum[0][j] = arr[0][j] + sum[0][j - 1];

    for (int i = 1; i < m; i++)
    {
        for (int j = 1; j < n; j++)
        {
            sum[i][j] = arr[i][j] + sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1];
        }
    }
}

vector<int> findSubmatrixSum(vector<vector<int>> &arr, vector<vector<int>> &queries) 
{
    // Write your code here
    vector<int> ans;

    int m = arr.size(), n = arr[0].size();
    vector<vector<int> > sum(m, vector<int>(n));

    getPrefixSum(m, n, sum, arr);


    for (auto &q : queries)
    {
        int x1 = q[0], y1 = q[1];
        int x2 = q[2], y2 = q[3];

        int curr = sum[x2][y2];
        
        if (x1 > 0) curr -= sum[x1 - 1][y2];
        if (y1 > 0) curr -= sum[x2][y1 - 1];
        if (x1 > 0 && y1 > 0) curr += sum[x1 - 1][y1 - 1];

        ans.push_back(curr);
    }

    return ans;
}
