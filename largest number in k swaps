


class Solution {
  public:
    // Function to find the largest number after k swaps.
    void track(int index, int &n, int k, string &s, string &ans)
    {
        if (index >= n || k == 0) {
            return;
        }
        
        vector<int> chars;
        char maxChar = s[index];
        
        for (int i = index + 1; i < n; i++)
        {
            if (s[i] > maxChar)
            {
                chars = {i};
                maxChar = s[i];
            }
            else if (s[i] == maxChar) {
                chars.push_back(i);
            }
        }
        
        if (maxChar > s[index])
        {
            for (int &in : chars)
            {
                swap(s[index], s[in]);
                
                if (s > ans) {
                    ans = s;
                }
                
                track(index + 1, n, k - 1, s, ans);
                swap(s[index], s[in]);
            }
        }
        else
            track(index + 1, n, k, s, ans);
    }
    
    string findMaximumNum(string& s, int k) {
        // code here.
        string ans = s;
        int n = s.size();
        
        track(0, n, k, s, ans);
        
        return ans;
    }
};
