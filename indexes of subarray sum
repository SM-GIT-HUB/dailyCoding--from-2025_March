class Solution {
  public:
    vector<int> subarraySum(vector<int> &arr, int target) {
        // code here
        if (target == 0) {
            return {-1};
        }
        
        int sum = 0;
        unordered_map<int, int> mapp;
        
        for (int i = 0; i < arr.size(); i++)
        {
            sum += arr[i];
            
            if (sum == target) {
                return {1, i + 1};
            }
            
            int req = sum - target;
            
            if (mapp.count(req)) {
                return {mapp[req] + 1, i + 1};
            }
            
            if (mapp.count(sum) == 0) {
                mapp[sum] = i + 1;
            }
        }
        
        return {-1};
    }
};
