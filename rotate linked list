/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node* head, int k) {
    // Write your code here.
    int n = 1;
    Node* last = head;

    while (last->next)
    {
        n++;
        last = last->next;
    }

    if (last == head) return head;
    k = k % n;

    if (k == 0) return head;
    k = n - k;

    Node* prev = nullptr;
    Node* temp = head;

    while (k--)
    {
        prev = temp;
        temp = temp->next;
    }

    if (prev) prev->next = nullptr;
    last->next = head;

    return temp;
}
